Notebook[{Cell[
CellGroupData[{Cell[
BoxData[RowBox[{"input","=",RowBox[{RowBox[{"Characters","/@","\"1 + 2 * 3 + 4 * 5 + 6\""}],"//","StringSplit"}]}]],
"Input",CellLabel -> "In[426]:= ",ExpressionUUID -> "f1c0d893-cc27-4f45-b2a3-bb26438c093d"],Cell[
BoxData[
RowBox[{"{",RowBox[{"\"1\"",",","\"+\"",",","\"2\"",",","\"*\"",",","\"3\"",",","\"+\"",",","\"4\"",",","\"*\"",",","\"5\"",",","\"+\"",",","\"6\""}],"}"}],
StandardForm],"Output",CellLabel -> "Out[426]= ",ExpressionUUID -> "6c0aa1a9-2b07-46d3-b5ed-7c5ffb1e8c98"]},
Open],ExpressionUUID -> "85062083-d8d2-41f1-8171-5365dd4bb02d"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{RowBox[{"{",RowBox[{"\"1\"",",","\"+\"",",","\"2\""}],"}"}],"/.",RowBox[
{RowBox[{"{",RowBox[{"x_",",","\"+\"",",","y_"}],"}"}],"\[RuleDelayed]",RowBox[{"Plus","[",RowBox[
{RowBox[{"ToExpression","[","x","]"}],",",RowBox[{"ToExpression","[","y","]"}]}],"]"}]}]}]],
"Input",CellLabel -> "In[427]:= ",ExpressionUUID -> "8a7321b7-899d-4fe3-ac3b-535a7ae73c56"],Cell[
BoxData[
"3",StandardForm],"Output",CellLabel -> "Out[427]= ",ExpressionUUID -> "e3fb3f47-0908-45e0-beda-9782fe3fb336"]},
Open],ExpressionUUID -> "f58d77f9-5e72-40ec-922e-497bab556832"],Cell[
BoxData[{RowBox[
{"Clear","[",RowBox[{"eval",",","plus",",","times"}],"]"}],"\n",RowBox[{RowBox[{"eval","[","input__List","]"}],":=",RowBox[
{RowBox[{"input","  ","//."," ",RowBox[{"{","\n",RowBox[{RowBox[{RowBox[{"{",RowBox[
{"x_Integer",",","plus",",","y_Integer"}],"}"}],"\[RuleDelayed]",RowBox[{"Plus","[",RowBox[
{RowBox[{"ToExpression","[","x","]"}],",",RowBox[{"ToExpression","[","y","]"}]}],"]"}]}],",","\n",RowBox[
{RowBox[{"{",RowBox[{"a___",",","x_Integer",",","plus",",","y_Integer",",","b___"}],"}"}],"\[RuleDelayed]",RowBox[
{"List","[",RowBox[{"a",",",RowBox[{"Plus","[",RowBox[{RowBox[{"ToExpression","[","x","]"}],",",RowBox[
{"ToExpression","[","y","]"}]}],"]"}],",","b"}],"]"}]}]}],"\n","\n","}"}]}],"//.",RowBox[
{"{","\n",RowBox[{RowBox[{RowBox[{"{",RowBox[{"x_Integer",",","times",",","y_Integer"}],"}"}],"\[RuleDelayed]",RowBox[
{"Times","[",RowBox[{RowBox[{"ToExpression","[","x","]"}],",",RowBox[{"ToExpression","[","y","]"}]}],"]"}]}],",","\n",RowBox[
{RowBox[{"{",RowBox[{"a___",",","x_Integer",",","times",",","y_Integer",",","b___"}],"}"}],"\[RuleDelayed]",RowBox[
{"{",RowBox[{"a",",",RowBox[{"Times","[",RowBox[{RowBox[{"ToExpression","[","x","]"}],",",RowBox[
{"ToExpression","[","y","]"}]}],"]"}],",","b"}],"}"}]}]}],"\n","\n","}"}]}]}]}],"Input",
CellLabel -> "In[428]:= ",ExpressionUUID -> "d95fac3d-4236-4fd5-bd73-509a76b0e331"],Cell[
BoxData[
{RowBox[{"Clear","[","input2characters","]"}],"\n",RowBox[{RowBox[{"input2characters","[","input_String","]"}],":=",RowBox[
{RowBox[{"\"eval[{\""," ","<>",RowBox[{"StringReplace","[",RowBox[{"input",",",RowBox[
{"{",RowBox[{RowBox[{"\"(\""," ","\[Rule]"," ","\"eval[{\""}],",",RowBox[{"\")\"","\[Rule]","\"}]\""}],",",RowBox[
{"\"+\"","\[Rule]","\", plus, \""}],",",RowBox[{"\"*\"","\[Rule]","\", times, \""}]}],"}"}]}],"]"}],"<>","\"}]\""}],"//","ToExpression"}]}]}],
"Input",CellLabel -> "In[430]:= ",ExpressionUUID -> "089d1737-b5ea-4fbf-af8e-90d3c8a29835"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"input2characters","[","\"2 * 3 + (4 * 5)\"","]"}]],"Input",
CellLabel -> "In[432]:= ",ExpressionUUID -> "8d25a31a-c0b4-4319-9665-fa69bccdcfa3"],Cell[
BoxData[
"46",StandardForm],"Output",CellLabel -> "Out[432]= ",ExpressionUUID -> "6c0d69a4-5c44-4f39-8c66-a2e8ff289b1a"]},
Open],ExpressionUUID -> "01b780b9-4a15-42b6-b78a-2e7bb8a852bd"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"input2characters","[","\"((2 + 4 * 9) * (6 + 9 * 8 + 6) + 6) + 2 + 4 * 2\"","]"}]],
"Input",CellLabel -> "In[434]:= ",ExpressionUUID -> "6283ed61-a8b5-448a-addf-6ce7bf261901"],Cell[
BoxData[
"23340",StandardForm],"Output",CellLabel -> "Out[434]= ",ExpressionUUID -> "5c791adb-e4b6-432a-a6db-6d0d59d4f6bf"]},
Open],ExpressionUUID -> "9cfd787b-747a-4acc-90c3-3be0c7a2efd1"],Cell[
BoxData[RowBox[
{RowBox[{"testinput","=","\"1 + (2 * 3) + (4 * (5 + 6))\[NonBreakingSpace]still becomes\[NonBreakingSpace]51.\n2 * 3 + (4 * 5)\[NonBreakingSpace]becomes\[NonBreakingSpace]46.\n5 + (8 * 3 + 9 + 3 * 4 * 3)\[NonBreakingSpace]becomes\[NonBreakingSpace]1445.\n5 * 9 * (7 * 3 * 3 + 9 * 3 + (8 + 6 * 4))\[NonBreakingSpace]becomes\[NonBreakingSpace]669060.\n((2 + 4 * 9) * (6 + 9 * 8 + 6) + 6) + 2 + 4 * 2\[NonBreakingSpace]becomes\[NonBreakingSpace]23340.\""}],";"}]],
"Input",CellLabel -> "In[460]:= ",ExpressionUUID -> "86a6094c-d767-4ab2-ac79-29cd6e4b032f"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{RowBox[{"StringSplit","[",RowBox[{"testinput",",","\"\\n\""}],"]"}],"//","TableForm"}]],
"Input",CellLabel -> "In[464]:= ",ExpressionUUID -> "ecc0a0c4-e4c8-4751-a810-6c231505a451"],Cell[
BoxData[
TagBox[TagBox[GridBox[{{"\"1 + (2 * 3) + (4 * (5 + 6))\[NonBreakingSpace]still becomes\[NonBreakingSpace]51.\""},{"\"2 * 3 + (4 * 5)\[NonBreakingSpace]becomes\[NonBreakingSpace]46.\""},{"\"5 + (8 * 3 + 9 + 3 * 4 * 3)\[NonBreakingSpace]becomes\[NonBreakingSpace]1445.\""},{"\"5 * 9 * (7 * 3 * 3 + 9 * 3 + (8 + 6 * 4))\[NonBreakingSpace]becomes\[NonBreakingSpace]669060.\""},{"\"((2 + 4 * 9) * (6 + 9 * 8 + 6) + 6) + 2 + 4 * 2\[NonBreakingSpace]becomes\[NonBreakingSpace]23340.\""}},
RowSpacings -> 1,ColumnAlignments -> Left,ColumnAlignments -> Left],Column],Function[
BoxForm`e$,TableForm[BoxForm`e$]]],StandardForm],"Output",CellLabel -> "Out[464]//TableForm= ",
ExpressionUUID -> "795f280f-e510-4af5-a99d-717016c85055"]},Open],ExpressionUUID -> "d73018e7-fe99-44ef-8e1f-8b4a6cd612de"],Cell[
BoxData[
RowBox[{RowBox[{"input","=","\"4 + 2 * 8 + 6 * 9\n(7 + 2) + 2 + 8 + 9 * 9 + (8 + (7 * 8 * 9 * 6) * 8 + 9)\n5 * (6 * 4 * 7 + 2 + 3) + 3 + 8\n7 * 4 * (8 * (9 * 4 * 4 * 6))\n2 + (5 + 6 * 3 * 5 + (2 + 3))\n5 + (7 + 4 * 3 + 7 * (4 * 8 + 9 + 9 + 9 * 9) * 2)\n9 + (3 * (3 + 7) + 2 + 4) * 6\n3 * 8 * 2 + 6 + (2 + (8 * 7) + 5 * 8)\n2 + 8 + (8 + 6 * 7 * 3 + 8 + 6)\n((5 + 5 * 9) * (3 * 8 + 2 * 4 + 4 + 3) + 5 * (7 * 3 * 9)) + 3 + 2 * 9\n2 * ((7 * 8 * 9 + 8 + 2 * 4) * 4 + 7 * 8) * 7 * 4\n(9 + 6 + (5 + 9 + 3)) + 8\n6 + 4 + (7 + 7 + 3 + 8) * 6\n7 + 3 * (9 * (4 + 9 + 6 + 2) + (5 + 9 * 8 + 6 * 5) * 6 * 8 * (3 + 9 * 8 + 8 + 5)) * 3 + 4 * 6\n7 + (3 * 4 + 6 + 9 * 8)\n(9 + 9 + 6 + 6) + 3 * (5 * (2 + 5 * 6 + 6 * 6)) + (3 + (2 + 3) * 4 + 3 + 9 * (6 * 5 * 7)) * 8\n2 + (5 * 8 + 9 + 3) * 7 * 6\n8 * 9 + (2 * 9 * 9) * 5 * 9\n7 * (6 * 4) + (5 + 3 * 6 * 3 + 7 * 2)\n2 + 4\n3 * (9 * 7) + 4 + 6 * 4\n(7 + 7 + (9 * 7 * 9 + 5 + 4) * 8 + 2) + 5 * (7 * 5 + 3 * 3 * 6) + 4 + 8 + 4\n6 + 7 + ((7 + 9 * 3 * 6 + 8) + 5 * 9 * 6)\n(4 * (4 * 7 + 4 * 3) * 3) + 4 + 8\n6 * (2 * 2 + 8) * ((9 + 3 + 9 * 7 + 4) * (4 * 9 * 6 * 9) * (7 + 9 + 6) * 4 * (2 + 6 * 6 * 8 * 5 * 7)) + 4 + 6 + 3\n(3 + 6 * 8 * 8 * 4) + (3 + 6) * 5 * ((4 + 6 + 4 * 6 + 6) * 3 * 8 * 5 + (8 * 3)) * ((5 + 2) + 4 + 2 * 9)\n7 + (7 + 8 * 3 * (4 + 2 * 5)) + 7 + 9 * 6\n8 * (4 * 3 + 8) * (5 + 6 + 9) + 5 * 4 * 7\n9 + 2 + (2 + 8 * 6 * 7 * 6 * (7 * 6 + 4 * 6 * 6 * 5)) * ((9 + 4 * 5 + 9) + 7 + 5) + 3 * 2\n((9 * 4) * (7 + 6 * 3) * 3 * 8 * 4 * 7) * (4 + (8 + 9 + 3 * 5) + 5 * 2 + 6 * 8) + 6 * 4 + (2 * (3 * 8 * 4 + 3 + 7 + 7) * 9 + 9 + 3)\n7 * 8 * ((8 + 6) + 7 * (6 * 2 + 9)) + 5\n3 + 6 + (8 * 2 + 4) + 2\n3 * ((8 + 6 + 4 + 7 * 7 + 8) + 9 * (8 * 5 + 9) * 2 + 9 + 8) + 9 * 7 * 4\n7 + 4 * 2 * (6 + 7 * (9 + 8 * 6 * 3) + 3 * (5 * 4 + 7 + 9 + 3 + 8)) + 4 + 5\n9 * 2 + 2 + 8 + 6 * (7 + 5 * 5 * 8)\n((8 + 9 * 6 * 5 + 2) + 4 * 6 + 4) + 8 * (9 + 9 * 9 * 5) + 3\n((4 * 9 + 4 * 3) + 9 + 7 * 8) * 6\n8 + 6 + 7 + (2 + 7 * (3 * 2 * 7 * 5)) + 3 * 9\n(9 * (8 * 6) + 4 + 3 * (3 * 4 + 8)) + (5 + 3 * 7 * 3 + 7) + (8 + 8 * 9 + 7 * (4 + 6 + 6 + 6 + 5) + 2) + 6 + 9\n7 + 9 + 7 * (7 * 2 * (8 * 4 + 6 * 4 + 2 + 8)) + ((6 + 7 * 5 * 4) + 6 * 7 * 9 * 5) * 8\n(2 * 6 * 2 * 3 + 3 + 3) + 9 * 5 * 7 * 2 * 9\n(5 + 2) + (8 * 8 * (2 * 5 * 3 * 8 + 8) + (8 * 8) + 2) + 2 * 7\n8 + (5 * 7 * 9 * 5 * 9) + 5 + (6 * 9) + (3 + 3 * 3 + 7) * 7\n((5 + 2 * 7 + 9) * 7 * 2) + (5 * 3) * 8 * 3 + 2\n6 + (8 + 7 * 8 * 3 + 4 + 3) + 9 * 5 * 6\n6 + 8 + (9 * 7 * (3 + 6 * 7 + 8 * 8 * 5) + 5)\n5 + 6 + 6 + (6 + 9 * 8) + 6\n2 * 9 * (6 + 8 + (5 + 2) * 3) * 7\n3 + (2 + 8)\n4 * 8 * 9 * ((6 * 8) + 2 + 9 + 9 * 6) * 6 + 3\n9 * 9 + (6 * 4 * 2 + (4 + 2) * 5 * 3)\n(7 + 7 + 9) * (5 + 6 + 8) * 5\n4 + ((7 + 3 + 4) * 6 * (3 + 8) + 4) + 9 + 8\n9 * 8 + 5 * (5 * 6 * 3 + 2 * 3) * 9 * 4\n((9 * 2 * 3 * 3 * 5 + 9) + 8 + 9 * 2) * 8 * 7\n8 * (9 + 2 + 8 * 7 + 8 * (2 + 6 + 5)) + 7 + 3 + 5 * 9\n(4 + 8 * 9 * (5 + 9) + 9) + 7 + 2 * 4 * 6 * 5\n2 + ((5 + 3 + 8 * 8 * 3 + 5) * 3 + (3 + 8 * 9 + 3 + 7 + 4) * (5 * 9) + 4 * 6)\n(7 + 8 * 4) + 2 + (8 + 6 * 3 * 2)\n3 * (6 * (5 * 8 * 4) * 8 * 8) + 2 + 9\n9 * ((2 * 6) * 9 + 5 + (5 + 7 * 6 + 4 + 8 * 8) + (6 * 7 + 9 + 8 + 8 * 5) * 6) * 4\n3 * 3 + (8 + 9 * 7 + 8 * 3) * 7 + 3 * 2\n(5 + (3 * 4)) + 3\n(2 + 3 * 2) * (4 * 3) * 7 + (6 + 6 * 9) + 5\n7 * 4 * (6 + (5 * 7 + 5) * 5) * 6 + 4\n7 + (9 + 9) * 3 * 4\n5 + 2 * (2 + 2 * 3 + 2 + (9 * 7 * 4 * 2) * 3) + 7 * 3\n2 * (9 + 8 * 8 * 5) * 9 + 3 + 5 + 3\n7 + 7 + (8 + 5) + 2 + 2 * (7 + 8 + 7 * 9)\n2 + 7 * (5 + 5 + (6 * 8 * 8) + 4)\n7 + 6 + 4 * (8 * 8 + (7 * 8 + 5 * 3 * 9 + 7) * 8) + 7\n9 * (9 + (3 * 2))\n5 + (3 + (7 * 7 * 5 * 9 + 2 * 4) * 2) + 3\n7 * 5 + (5 * 7) + 5 + 8 + 6\n3 + 2 + (3 + 4 * 2 * (9 * 9 + 5 + 8 + 4 + 7) * 3 + 3) * 6\n(3 * 7 + 9) + 7 * (7 * (2 + 6 + 6 * 5) + 8 + (6 * 8) * (3 * 8 + 8 * 8 * 4 + 9)) * ((3 * 3 * 2 + 8 + 5) + (9 + 8 * 9 + 4 * 5 * 3)) + ((9 + 9 + 6) * 9 * 9) + 9\n2 + 8 + (4 + 8 * 6) + 6 + (6 + 6 * 3) + 6\n((7 * 9 + 8 + 3) * 3 * 5 * (7 + 9 * 6 * 8 + 3 * 2)) + 4 * (5 + 5 + 4 * 7 * 5 * 2)\n9 + 9 * 3 + 8 * 4\n5 + 7 + 7 * 5\n8 + (2 + 8 * 9 + 5 * 4 + 9) * 8 * 7 + 7 * 5\n7 * (3 * (3 * 3)) + (7 * (4 + 2 + 8 + 3 * 2 + 3)) * 2 * 5 + 3\n2 + ((8 * 7 * 9 + 8 + 6) * 4 + 6 * 3 * 6) * 4 * 7 * (4 + 6 + 6 * 2 * 7 * 6) + 8\n4 * 8 * 8 + (3 * 3 * (4 + 5 * 4 + 4 + 4 + 7)) + 4\n9 + ((3 + 8) + 4) + 4\n(2 * 2 * 6 * 2) * 4 + 2 * 7 + 6\n8 * (3 + 9 + 2) + 9 * (7 + 9 + 7) * (2 * 4 * (2 + 7) + 6 * (5 + 9 + 6 + 8 * 8) * 7) * (7 + (3 * 5 + 4 + 5) * 3 * 3 * 8 + 4)\n5 * 8 * ((9 + 8 * 5) * 3 + 7 * 9 * 6) * 4\n(4 * (3 * 6 * 7) * 4 * 4 + 5 * 3) * ((4 + 7 + 9) + 4) * 5\n3 * 5 + (2 * 6 * (5 + 6 + 4) * (5 + 5 * 5 * 5) * 5 * 8) + 5 * 6 + 8\n(2 + (6 * 2 * 5 + 8 * 4 + 4) + 4 + (4 * 3) + 6 + 7) + 2 * 9 + 9 + 9 * ((8 * 6) + (6 * 2) * (6 + 8 + 4 * 2 * 7 * 6) * (5 + 7 * 9) + 6)\n6 * (3 + (2 * 7)) + 6 * (4 * 5)\n5 + 7 * 4\n4 * (3 + 8 * 9 + 5) + 6 * (9 + (4 * 6 + 4) * (4 + 2 + 7 * 4 * 3 + 2) + 4 * 3) + (2 * 7) + 5\n(5 * 2 * 2 * (2 + 8 + 5 * 6) + (3 * 9 + 7 + 2 * 6 + 7) + 6) + (5 * 5 * 5 * 8) + 2 * 5 * 4\n(3 + 8 * (6 * 4 * 6 + 9) + 3) * 3\n((7 * 5 + 2 + 6 + 8) * (7 + 2 + 3) * 5 + 7) * 7 * 6 * (7 + (4 * 6 * 8 * 7 + 2 + 2) + 6 + 8 * 9 + 4)\n2 + 7 * 7 + (6 + (9 + 8) + 6 * 2 * 7) + ((3 * 6 * 8 * 3) * 6 + 2 * 8 * (2 * 2))\n4 + 6 * 9 + 7 * (8 + 6 * 3 + (5 * 8 + 2 * 8 + 6 + 9) * 4 * 5) + (5 + 9)\n7 * 6 + (8 + 5 * 3 * (9 * 2 + 5 + 6) + 7 + 9) + 9\n(8 + 7 + 8 * 4 * 6) + 5 * (9 * 4 * 9)\n8 + (5 * 8) * (9 + 6 * 4 * 8 * 6 + 3) * 6 + 3 + 3\n((7 + 9 * 7 + 2 + 3) * 6 * 3) * (9 * 7 * 7 + 6) + 2 * 9 * 9 + 2\n3 + 5 * (2 + 8 * 2 * 7) + 6 + (7 + (7 + 5 * 8 * 6 * 4) + 5 * 3 * (4 * 2 + 2 + 6 * 3 + 6)) + 7\n4 + 7 * 9 + 6 * 7 * (6 + 5 + 9 + (7 + 9 + 2 + 3 * 7) + 6)\n7 + ((8 * 6 + 7 * 4 * 4 * 4) + 3 + 5) + 5 + 7 + 2 + 2\n9 + (2 * (4 + 2) + 7)\n(3 * 2 * 6 * 3 * 5) + 5 + (6 * 7 * 5) * 6\n(4 + 3 * 5) * 7 * 8 + 9\n(9 + 7 + 9 + 6 * 8) * 8 * (9 + 7 * 6 + 6)\n8 + (7 + (8 + 4 + 6) * 5 + 7) * 5 + ((9 * 5 + 8 * 4 * 7 + 2) * (4 * 2 + 7))\n3 + 8 * (7 * (4 * 7 * 3 * 8 + 3) + 7 + 3 * 8 * 3) * 6 + 5 + 9\n5 + (2 + 2 + 8 + (3 + 5 * 3 * 6 + 6 + 2) * 8) + 9 + 3\n9 * 8 * (7 + 8 + 8)\n(3 * 3 * 2 * 4 + 2) + 4 + 8 + 6 * 7\n(5 + (9 * 5 + 9)) * 2\n4 * ((4 * 7 * 3 * 9 + 9 * 9) * (8 + 6 + 2 * 9 * 2 * 4) + (3 * 4) + 2 * (6 * 2 + 9 * 3) + 9)\n3 * 2 * (4 + 5 + (2 + 5 * 2 * 6 + 8) + 5 + 2 * (8 + 5)) * 7 * 6 * 6\n(5 + 8 * 5) + 4 * 4 * (6 + 7 * 5 * (9 * 6 + 5) + 5)\n8 * 7 * 3 * (7 * 6 * 5 + 2 + 8) + 5\n7 * (4 * 4 + 2 + (2 * 9) * 6 + 8) + 5 + (3 * 5) + 9 * 8\n2 * 3 * 8 + ((8 * 3 + 9) + 9 * 6 + (6 * 5 * 9 * 2) + 4 * 2)\n6 + 7 + (6 * 3 * 5 + 3 + 5 * 8) + 8 * 2\n((8 + 2 + 4 + 3 + 5 * 2) + 5 + 5 + 4 + (5 + 8 + 2 + 6 * 6 * 5)) * 4 + ((8 * 7 + 5) + (5 + 4) + 7 + 9) + 7\n(7 + 2 + 7 * (3 + 6 + 6 + 7 + 3 * 3) + 6) * 8 + 7 + 2 + 4\n6 + 8 * 9 * 8 * (8 + 4 * 3 * (5 * 6 * 4 * 2 * 8)) * 8\n(2 * (3 + 7 * 6 * 7)) * (2 + 7 + 3 + 9 + 9 + (6 + 4 + 3 * 5 * 5 * 4)) + 2\n9 * ((4 * 9 * 7 * 4) + 9 + 5 * 3) + 9 + 7\n((2 + 4 + 6 * 8) + 8 * 7 + 7) * 8 * 3 * 2\n(4 * 5) * 8\n(3 + (8 * 4 * 8)) * 7 + 4 * (4 * 4 * 6 + 7 * (5 * 3 + 4 * 4 + 4 * 4) * 9)\n2 + 9 + 3 + 3 * 6 + 6\n8 * 9 * ((8 * 7 * 3 * 4) + 2) + (9 + 9) * (7 * (5 + 6 * 2 + 7) + (5 * 2 + 3 + 7))\n2 * 8 + 2 + (3 + 4 * 4 * 8) + (8 * 5 * 7 + (8 * 6 + 8 * 6))\n((5 + 4 + 5) * 2) + 6 * 3 + (4 * 2)\n(9 * 4 * (7 + 2 + 5 * 6)) + 4 * 7 * 7 * 2\n((4 + 9) + 6) * 5\n(4 * 2) * ((3 * 5 * 5 * 3 * 9 + 5) * (5 * 2 * 5)) + 2 + 2 * 5\n(4 + (4 * 2 + 7 * 2 + 6 * 8) * 8 + 2 * 8 + 3) + 3 * 7 * 3 + 8\n2 + (6 * 5 + (8 + 4 + 9 * 7)) + 5\n((7 + 5 + 8 * 4) + 2) + 3 + (9 * (7 + 8 * 3 * 8 + 2 * 7) + 5 + 7) + 2\n4 + 7 * (3 * 4 + 6 + (6 * 7 + 7 + 4 * 5 + 4) + 2 * (6 + 3 + 8 + 9)) * 8 + 5\n7 + 4 + 8\n8 * 8 * (8 * 6 * (2 + 8 * 9 + 7) + 6 * 4) + 3\n(4 + (9 * 8 + 5 + 9 * 2 * 6)) * 4\n9 + 5 + 2\n8 + 2 * 6 + (3 + 4 + 8)\n2 * 5 + ((6 * 3 * 4 + 4 * 8) + 9 + 4 + 2) * (9 + 2) + 3\n4 * 8 * 6 + 4 + 9\n8 + 9 * (7 + 9 + 2 + (7 * 3 + 5) + 6 + 4) * 4 * 5\n6 * ((7 + 6 + 3) * 8 + 5 + (3 * 7 + 8 * 5 + 6 + 9))\n6 * 9 * 4 + 7 + 4\n7 * 2 * 7 * 9\n8 * 5 + (8 + 9 + 9 + 3 * 7) * 4 + (9 + 2 * (2 + 8 * 3 + 4 * 2 + 8) * 8 + 8 + (7 + 3 + 9)) * 8\n8 + 7 * ((4 * 9) * 6) + 6\n(4 * 7 + 2) + 7 * ((2 + 5 * 9 + 5 * 9 * 8) + 8)\n(9 * 4 + 4 * 6 * 6 + 9) + (8 + 3 + 3) * 6 * 8 + 3\n(9 + (4 + 9 + 7 * 9 * 7 * 7)) * 2 * ((5 + 9 * 3) * 2 * 3) + 2\n(2 + (7 * 8 + 9) * 7) + 4 * 2 + 6\n(7 * (6 * 5 + 8 * 8 + 4) * (6 * 4 * 3)) + (9 + 7 + 2 + 4 * 9) * (2 + 8 * 4 + 3) + 7 * 5 + 6\n(4 + 3) + 8 + 2 * 4\n(8 + 3) + 5 + 6 + (6 + 4) + 7\n6 * 7 + 2 + ((6 + 7 * 5 + 6 * 4) + 4 + 8 * 5 * 8 * 9) + (7 * 6)\n(4 + 9 + 5 + 5) + 7 + ((9 + 9) + 5 * 6 + (9 * 4 + 6) * (4 * 7 * 6 + 2)) + (6 + (2 + 7 + 6 * 7 + 4 * 6))\n4 + 4\n(8 + 8 + (5 * 2 + 4) * 5 * 2) * (3 * 4 * 6 + 3 + 4 * 9) * (8 * 6 + 5 + 9 + (9 + 4 * 3 * 5) + 4)\n4 * (8 + (3 + 5)) + 2 * 5 * 4\n7 + 5 * 2 * 3 + 6 * 8\n2 + ((9 + 9 + 2 * 6) + 4 + 2 * 8)\n2 + ((5 * 4 * 7) * 9 * 5 + 4 + 7 * 5) * 6\n2 * 4 + ((7 * 4 + 4) + 6 + (8 + 9 + 9 + 8)) + (3 + 3) * ((2 + 8) + (9 + 7) + 8 * 2) * 3\n(2 * 6 + 4 * 5 + (3 + 7 * 9 + 2 + 2)) + 6 + (8 + 6 * 4 * 8 + 9) + (7 + 9)\n(2 + (8 + 4)) + 5 * 3 + 6 * (7 + 3 + 7 * 4 * (6 * 7 * 2 * 9 * 6 + 9) + (6 * 4))\n8 + 7 * 2 * 3\n8 * (5 + 2 + 7 * (9 + 2 * 6 * 5 * 6) + 2) * 6 + 9 * 4 * 4\n(2 + 4 + (8 * 8 + 7 + 8 + 4 + 7) * 2 + (4 * 7 * 7 * 8)) + 5 * 9\n(4 + 7 * 2 * 9 * 6) + 9 + 7 + (6 * 3 + (8 + 7 + 2 * 8 * 4 * 3) + 4 * 8 * 2) + 5 * 6\n(7 + 4 * 8) * 7 * 4 + (7 * 2 * 9 + 8) + 8 + 9\n(7 * 3 * 3 * 2) * (2 + 8) * 5 + 3\n9 + 3 * 2 + 3 + 8\n(7 + 4 * 4) + 2\n9 + (3 + 8 * 2 * 7) * 7\n9 * (7 + 7 * (5 * 8 * 8 + 8) * 6 + 4) + 9 * 3 + (4 * 2) * (2 * 6 + 3 * 9 * (7 + 2 * 2 + 6 * 3))\n7 + (5 + 5 + 2 * 3)\n8 + (7 + (4 + 2 + 7 * 6) * 4 + 4) + (2 * 9 + 9 * 5) + 3 + 3 + 9\n7 + 8 * 7 * 6 * (4 * 6 * (9 + 7 * 7 + 2)) * 2\n(9 + 4) * 2 * 7\n3 * (7 + 9 * 9) * 8 + 9 + 6 * 7\n9 * (2 + 7 * (8 * 2 + 5 * 9) + 7) + 6 * 9 + 5\n4 + 7 * (5 + 9 + 7 * 9 + (8 * 8 + 4 + 6 + 5) * 3)\n3 + 5 * ((9 * 9 * 3 + 9) + 6 * 7 * 2)\n(2 + 7 * 6 * 2) + 7\n(5 * 9 + 7 * 9 * (5 + 4 + 6 * 3 * 5) * (8 + 8 + 6)) * 9 + (6 * 3 * 4 + 8 * 3)\n4 + 4 + ((3 + 6 + 5 * 5) * (8 + 7 + 9) + 3 + 7 * 7) + (3 + 8 + (8 * 4 + 5 + 5 * 2) * 7 * 5)\n6 * 7 + (5 + (9 * 7 + 6 * 4) * 8 * 6 * (5 * 7 + 6 + 4 + 9 * 5) + 4)\n9 + 8 + (3 * 5) + 3 + (4 + 2)\n8 * 9 * 6\n(6 * 2 * (2 + 9 * 4 * 8 + 2 * 9) + (6 * 9)) * 8 * 6 + 4\n(6 * 3) + (8 + 3 + 2 * 4 + 9)\n3 * 4 + (4 + 8 + 2 + (6 * 7 + 5 * 8) + (9 * 7 + 3)) + 7 * 7\n((6 * 5) + (6 + 3) * 7 * 9 + (7 + 3 + 6) + 7) * 5 * 4 + 7 * (2 + 2 * 8 * 5 * 5 * 6) + 7\n(9 + 5) * (8 * 2 + 2) + 9 * 7 + 5 + 7\n(2 * 8 + 2) + 8 * (2 * 5 * (8 + 8 * 8) + (8 + 6 * 4 + 4 + 4 + 2) * 3) + 9 * (7 * 8 + 5 + (8 * 7) + 8 + 8) + (7 + 5)\n5 * (5 * 9 + 8 * 4) + 4 * (4 * 7 + 6 + 7 * 5 * 3)\n8 * 8 * (8 * 8 * 6 * 9 + 5 + 6) * (4 + 6 + 5 * 7)\n9 + 4 + 8 * 5 * (4 + 9 + 7 * (9 + 5))\n4 + 9 + 6 * 4 + (9 * 3 * (8 * 6 * 5 * 5 * 7 + 5) + (6 + 7 + 7 * 4 + 8) + (4 + 5 + 8 * 5 + 7)) + (9 + 9)\n4 * 4 + 8 + 8 * (7 * (8 + 5 * 4)) + 6\n2 * 9 + (7 * 2 + 5 * 7 + 5) + 4\n2 * 6 * 7 + (6 * 3 * 4 * (7 * 6 + 4) + 8)\n(4 + 3 + (9 + 7 * 6 + 2 * 2 * 6) + 7) * 4 * (5 + 7 * 7) * ((3 * 6 + 4 + 4 + 3 + 2) * (4 * 5 + 4 * 9)) * (4 + 5 * (8 + 4) * 6 + 9 + 6)\n(7 * 4 * (7 * 4 + 9 + 5) + 5) + (4 * (6 * 6 + 6 + 9) + (3 + 4 + 3 + 2 * 9 * 5)) + 8 + ((9 * 7 * 4 + 5 * 9 + 7) * 8 * (8 + 3 * 9 * 3) + 7 * 7 + 4) * (2 + (5 + 3 + 3 + 2 + 8) + 2 * 6 * (3 * 9)) + 2\n(4 + 7 + 7 * 8 + 6 * (3 * 5)) * (5 + 9)\n4 + 2 + (5 + 3 * (2 + 4 + 2 + 7 * 6)) * ((4 + 6 * 6 * 3) * 5 * 4 * 2 + 3 + 5)\n(4 + (4 + 8 * 2) * 7) + 3 * 8 * 6 * (8 * 7 + 8 + 3 * 7)\n6 * 9 + 3 + ((6 + 2 * 3 * 4 * 5 + 4) * 8 + 3 * (3 * 3 * 4 + 2 * 3)) + 9\n((2 + 7 * 2 + 9 * 6) + 5 + 5) + (8 + 5 * 3 + 6) * (6 + (5 + 8 + 7 + 2 * 8) * 4 + 2 * 2) * 7 + 3 + 4\n(4 + (7 * 2 * 5 * 8 + 6 + 2) * 2 * 8) * 9 * 5\n5 + 8 + 3 * 4 * (2 + 5 * 5 + 6 + 5) + 4\n7 * 9 + (6 * 2 * 7 * 2 + 5) + 6 + 2\n5 + (9 + 2 * (5 * 5 * 2 * 2) * 2 + (2 * 6 + 8)) * 9 * 4\n4 + 4\n8 * 2 * (5 + 2 * 9 + 7)\n2 * 8\n5 * (5 + 6 + (3 + 6 * 5) * 8) * 2 + 4 + 9\n9 * 2 * (2 * 6 * 9 * 6 * 5 + 3) * 6 * (9 + 3 + 2) * (9 + 5 + 6 + 7 * 7)\n4 + 6 * 3 * 6\n7 * 7 * 6 * 7 + (6 + 7 + (9 + 6 * 9) * 3 * 3) + 7\n2 * (9 + 9) * 6 + 3 * (9 * 9 * 7 + 2 + 6 + 4) + 3\n4 * (4 * 9 + (5 * 5 + 3 + 6 * 8) * 2) + 3 * 6\n6 + (8 + 3 + (2 + 4 * 8)) * 7 + 6 * 5\n(2 * 4) * 3 + 2 * (9 * 7 + 5 + 2)\n3 * (5 + (3 * 4) * 6 * 2 * (3 + 6) + 4)\n3 * 4 + 2 * 4 * (8 * 4) * 9\n((8 * 7 + 7) * 9 * 8 + 4) + 9 * 8 * 2 + 2\n3 * 2 * 6 + 4 + 6 * ((5 * 9 * 4 + 6) * 3)\n(9 * 9 + 8 * 5) + 7 * 3 + (8 + 2) + (6 + 5 * 6)\n4 * 2 * ((5 + 6 * 3 * 9 + 8 + 6) + 6 * (6 + 5 + 5 + 7 * 4 * 6) + 2 * 9 * 3)\n8 * (4 + 7 * 3) * (4 + 6 + (2 * 2) * 6) + 6\n(9 * 5 * (5 + 7 + 6 + 9 * 8 * 8) + 8 + 5) + 6 * (5 + 7) + 6 + 9\n4 * ((2 * 9 + 6 * 4 + 6 * 8) * 9 * 8 * 7 * (3 * 5 * 2 + 5 * 5 + 5) * 7) + 2\n7 * 8 + 6 + ((3 * 2 + 9) + 5 * 6 + (8 * 3 + 6 * 6) * (3 * 9 * 6 * 9 * 3))\n3 * (7 + 2) + (4 + 4 * (3 + 2 * 2) * 3) + 9\n3 * (6 + 8 + 4 + 5 * 7) * 7\n3 * (5 + 2 * 6 * 9 + 4) + 3 * 5 + 5\n(2 * (2 * 9 * 8 * 5) * (5 * 5) + 6 * 4 + 6) * 8 * 6 * 8 + 6 * 6\n(5 * (7 + 3 + 2)) * 5 * 2\n7 * 6 * 8 + 9 * 6 + (7 * (2 + 8 * 8 + 8) + 5 + 2)\n2 + 6 + (5 + 5 + (7 + 6) + 5 + 4) * (7 * 2 + 3 * 9 * (5 * 8 + 5)) * 8\n(6 * 5 * 5 * (2 * 8 * 4 + 2 + 8 * 8)) * 2 + 5\n6 * 6 * 6 * 2 * (2 * 7 + 7 + (7 + 7 + 3 * 4 * 7) * 5) * 2\n8 + (9 + 9 * (4 + 2) + 3 + 8) * 9 * 4\n(7 + 9) * 3 + 2 * (2 * 8 * 6 + 7 + 8)\n2 * 8 * 2 * (6 * (9 * 5) * 3 + 4)\n((7 * 4 * 3 + 9 + 8 * 5) * (6 * 2 + 2) * (2 + 7 + 3) + 7 + (8 * 9) * 4) * 9 + 5 * 7 * (3 * (2 * 5 + 5 * 9 + 7 + 3))\n5 + (7 * 4 + (7 + 3 + 5 * 5) * 7 * 2 * 4) + 5 + 5 + 5 * 6\n2 + 6 * (2 * 7 + 4 * 2 + 8) + 7 * (9 * 6 + 5 * 9 * (8 * 8 * 5 * 7 + 3 + 2)) + 2\n3 + 6 + 8 + (6 * 9 * (8 * 5 * 9 * 9 + 8 + 7) * (2 + 8 * 9)) + 2\n4 * 5 * 7 + 9 + 2 + (6 * 2)\n8 + 5 + (2 * 8 * 7 * 2 * 9 + 5) * 6 * 4 + 5\n(4 + 9 * 4 * 8 + 7 + 8) + 9 * (5 * 2 + 8) * 9 + (7 * 7 * (6 + 7 + 5))\n6 + (9 + (2 * 8 + 5) + 7 * 9) * 2\n4 + (9 + 9 * 5 + 6 + 6 + 8)\n(9 * 7) * 5 + 3 * 4 + (4 * 7 * 6 * 6) * 2\n8 * (3 * 6) * (5 * (6 * 3 + 2) + 7 + 9 * 5 * (2 * 8)) + 6 * 3 * (4 + 5)\n9 + (2 + 5 * 2 + 7 + 8 * 3) + 8 + ((5 + 7 + 4 * 8) + 5) * 6\n(2 + 9 * 5) * (7 + 7 + 3 + (3 + 9 * 4) + 5)\n5 * 7 * ((4 * 8) + 6 + 3 * 3 * 7 * 6) * 2 + 3\n6 + 8 + 8 * 2 * (5 + 5 + 3 + (2 * 2 * 8) * 6) * 9\n4 * 8 * (5 + 8 + 7 + 2 * 2 * 8) * 6 + (8 + 3) * 2\n(8 + 9) * (6 + 2) * 5 + (3 * 8 * 2) + (7 + (4 + 3 * 6 + 3 + 8) + 2)\n2 * ((4 + 9) + 4 * (3 * 5 + 6 * 3 + 6 + 4) + 7 + 2 * 7) * 3 * 9 * (8 * 3 + 5 * 3) * 7\n((2 * 5 + 5 + 3 * 9) + 9 + 4) * 7 + 8 * 2 * 3\n2 + 5 * (5 + 5 * 9 + 2 * (4 + 2) * 4) + 4 + 2\n4 * 8 + (9 * 4 * 5 + 7) + 8 + (8 * 3 * 6 * 7 * 6)\n8 + (8 * 2 + 3 + 5) + 3 * 4 + 8\n8 + (2 + 9 + 9 * 9 + 3 + (8 + 6 + 4 + 6 + 9 * 9)) * 9 * 5 * (6 + 5 * 7 * (2 * 9) * (4 * 3 + 5)) + (7 * 2)\n(3 * 7 + 5 * (9 + 6 + 5) * 5) + 7 + 8\n9 + 7 + (7 * (9 + 7 + 8 * 5 + 9 * 6) + 9) + (3 + 9 + (9 + 6 + 9 + 7 * 7 * 6)) * 7 + (4 * 5 * (5 + 9 + 2))\n7 + 9 + (7 * (7 + 8 + 7 + 8 * 4 * 8) + 7 + 3 + 5 * 8) * (5 + 6) + (6 * 6) * 7\n2 * 8 + (9 + (2 + 6 + 7 * 7)) * 3 + 7 + (4 * 4)\n(7 + 2 + 5 * (8 + 6 + 9 * 2 * 6)) * 9 * 3\n6 * 9 + 4 + ((5 + 8 + 4 + 8 * 5 * 7) * 2) * 2\n9 + 5 * 3 + 2 * 7 * 5\n8 * 4 * ((8 * 8 + 7 + 9 + 3 + 6) + 3 + 6 + (2 + 8 * 9 + 6)) + 9 * 5 * 7\n6 + 8 * 3 + (6 * 4 * (8 * 3 + 8) + 3 * 7 * (9 * 6 * 7 * 8)) + 2 * 9\n6 * 3 * 5 * 3 * 5 + 6\n5 + (6 * 9 * 9 * 3 + 5 * 6) + 6 * 3\n((6 * 5 + 7) + 4 + 9 + (6 + 9 * 6 * 5 * 7 * 5) * 6) + ((8 * 5 * 3) + 5 * 9 + (7 * 5 + 5 * 6)) * (9 * 7 * 8) * 4\n8 * ((7 + 5 + 5 * 8) * (2 * 6))\n((9 + 4 + 6 + 7 * 4 + 3) * 2 * (6 * 8) + 8) + 5\n3 + 2 + 8 * ((3 + 9 + 7) + 9 * 9 * (3 * 2 * 7 + 9))\n8 + (5 + 2 + 3 + 4) * 4 + (8 + 6 + 9 * 4)\n6 * 9 * ((3 + 7 + 8 + 7 + 6 + 9) + 3 * 5)\n7 + 4 * 8 * (5 * 8 + 7) * 8 + 5\n3 + 7 * 6 * 7 + (4 + 3 * 3 + 6 + 6 + 9) + 4\n4 * 4 + (8 * 7 + (8 + 5 * 8 + 4) + 8 * 4 * (3 * 7 * 3))\n(5 * 9 + 3 + 2) + 4 + 7\n(3 * 2 + 2) + (8 * 2 * 4 + 8)\n(7 * 3 * (5 + 9) * 8) * ((8 * 3 * 3 + 6 + 4) * (7 * 8 * 7 + 9 * 5)) * (7 * (6 * 8 * 5 * 5 + 6 + 5))\n(6 + 5 + 8 + 8 + 2) * 7\n6 * 6 + (7 * 5 * 7 * 2 + 7 + (6 + 7 * 7 + 5 + 5)) + 6 * 2 * 9\n(4 + 5 * 9 + 2 * 8) * (7 * 9) * ((5 + 7 + 6 * 6 * 8 + 3) * (2 + 2 + 8) * 9) * 4 + 8 + 8\n(3 * 6 + 4 * (6 + 2 * 9 + 6 * 2 + 8) + (3 * 7 + 8 * 4 + 2)) + 9 + 7 * (5 + 4) + 2 * ((6 + 4 + 8 * 5 * 6 + 2) * 2 + 9 + (3 * 7) + 9)\n6 + 7 + 2 * 7 + (6 + 4 * 5) * 5\n4 * (9 * 6 + 2)\n5 * 3 + (8 * (4 + 5 + 5 * 9) + 2)\n3 * 3 + ((4 * 5 * 4) * 9 + 2 * (8 + 7 * 6 * 5 * 8)) + 3 + 5\n3 + ((2 * 5 + 8) + (2 * 6 * 5 + 9 + 7 + 8) + 7 * (9 * 9 * 4) * 8 + 6)\n(7 + 4 + (9 + 5 + 7 + 6 * 9) + 4 * (6 * 7 * 7) + 2) * 3 + 3 * 6\n(4 + 2 + 3 * (2 * 6 * 6 * 9)) * ((7 + 6 * 8) + 6 * 2 + (9 + 2) * (2 + 3))\n2 * (6 * (7 + 5 * 8 * 4) * (9 * 8 + 8) * (9 + 6) + 9 + 2)\n9 * (8 + (5 + 2)) * 7\n8 + (4 * 4 + 9 * 8 + (6 + 7 * 5 + 5) + 2) * 6\n(9 * (6 * 2 * 8 * 9) * 4 * 7 + 2 * 9) + 2 * 3\n2 * 5 * 4 + 4 + 6 + 6\n7 + 8\n((5 + 4 * 2 + 7) * 2 * (2 + 4)) * (3 * 8 * 3 * 3 + 6 + 6) + 6 + 3 * 7\n4 * (3 + (4 * 6 + 9 * 3) + 7 * 9 + (9 * 4 * 4))\n(7 + 4 + 4 * 4) * 8 * (9 + 5) + (4 * 5 * 8) * 7\n(3 + 2 * (4 + 7 + 8 * 2 + 5)) * 7 + 6 * 7 + 8\n9 * 8 * (8 * 8) + 9 + 6\n4 + 5 + 9 + (3 + 9 * 9 + 5 * 8 + 4)\n3 + 6 + 5 + 2 * 4 * (6 * 2 + (2 + 4 + 3 + 5 + 2) + 7)\n8 * 8 * 5 * ((6 * 7) + 2 * 7 + 2 + 2 + 7) * 6\n2 * 8 + (7 * 4 + (5 * 7 + 6 * 2 * 4) * 8) * 7 + 3 * 7\n(3 * 6 + (4 + 7)) + 8\n5 * 4 * (5 * 6 * (6 + 8 + 6 + 7 * 8 + 3) * 3 + 8 * 3) + (2 * (2 + 4 + 2 * 3 + 9 * 5) + 3 * (5 + 6 * 2 * 2 + 3) + 6) * (2 * 2) + 6\n5 * (7 * 5 * 2 + 7 + (8 * 3 * 6 * 8 * 8 * 2) + 2) + 4 + 6\n7 + 5 * 6 + (4 * 5)\n(8 * 4) * ((3 + 2 * 3 + 9 + 6 + 4) + (9 * 4) + 6 + 4) * 9\n6 * 5 * (2 + (6 * 7) * 8 + 7) + (2 * (4 * 5 * 5 * 6 + 5) * 2 * 3 + (9 * 2 + 3) + 6) * 6 * 5\n(8 * (2 + 9) * 6 + 6 * 8 + 4) + 2 * 2 + 2\n9 + (5 * 5 * (7 + 2 * 2 + 3 * 7) + 3 + 9) + 5 + 9 * 2\n(7 + 2 + 5 * 5 + 5 * (7 * 9)) * 7 + 6 * 7 + (6 + 5 * (5 * 7) * 5 * (4 + 7 + 8 * 7) + 8) + 5\n(8 + 2) + 2 * 6 * 7 + ((7 + 6 * 8 * 8 + 2) * 8)\n(9 + 5) + 7 * 6 * 5 + 6\n(5 + 2) + (4 + 8 + 8 * 5) * (6 * 2 * 3 * 4 * (7 + 3 + 7 * 3 + 5) + 7) * 2\n4 * 5 * 6 + 8 * (9 * 3)\n3 + (2 + 2 * 7 * 7) * 2 * 4 + (4 * 9 + 3 * (6 + 6)) + 3\n(2 + 2 + 4 + (2 * 3 + 6 + 9 * 3 + 4) * 4 * 7) + 5\n5 * (2 + 2 * 5 * 2 * 7) * ((8 + 5 * 4 + 2 + 7 * 4) + 2 * 7 * 9 * 9) + (8 + 2) * (7 + 7 * 9)\n4 * 3 * 7 * (7 + 2 * 3 * 3 + 9)\n9 * 5 * 7 + (3 * (5 + 2 + 3) * (9 + 2 * 5 + 9 * 4 + 2) * (9 * 4 + 8))\n(8 + (9 * 6 + 3 * 3) + 7 + (9 + 4 * 6 * 8) * 7 + (8 * 9 * 9 * 8)) * 9 * 2 + 2 + (5 * 5) * 4\n9 + 3 + 9 + 9\n(5 * 5 * 3) + 3 + (7 + 3 + 9 + 8 + 9) * 8 + 4\n4 * 7 * 2\n6 * 5 + 2 + (8 * (8 * 7 * 7 * 4 + 7)) * 9 * 2\n((2 * 6 * 8) + (2 * 5) + 2 * (3 + 6 * 6)) * 6\n9 + 7 * ((2 + 6 * 3 + 4 * 3 + 2) * (8 * 5 + 5) * 7 * 7 * 9) + 2 * 7 * 2\n7 * ((3 + 2 + 2 * 2) * (3 * 6 + 4) + 9 * 4 * 7) * 2\n6 * 6 + 8 + (4 * 3 * 3 + 3)\n(9 * 6 + 8 + 7 + 5 + 3) * 2\n6 + 6 * (3 * (8 + 8 + 2 + 9)) + (2 + (2 * 4 + 8 * 9 * 7 + 4) * (8 + 4 + 5))\n9 + 2 * (9 + 5)\n6 + (6 + (2 + 6 * 7) * 9 + 4)\n9 * ((2 * 9 * 2 + 2) + 9 * 7)\n9 * 3 * (8 + 4) * 8 * 8 + (3 + (6 + 2 * 9 * 4 * 6) * 7)\n3 + 7 + 5 + 7 * (9 + 3 * (8 * 9 + 6 + 7 + 9 * 8) * 9)\n5 * 6 * (4 * 5 * 4 + 6) + 6 + 6 + 2\n8 * 2 + (6 + 9 * 3 + 9) + 7 + 9\n3 + 2 + (2 + 9) + 7\n(6 + 3 * 3 * 8 * 5) + (5 * (7 * 7 + 8) + 8 + 6 + (4 + 3 + 5 * 5) * 8) + 5 + (6 * 4) * 8 * 2\n5 + 5 * 6 + 7 * (5 * (4 + 9 * 4 + 7 + 2 * 8) * 2 * 8 * 7) + 3\n(7 + (9 + 5 + 9 * 4 * 5 * 6) + 8) * 3 * ((7 * 8 + 8) * 5 + 8 * (2 * 6 + 9) * 5 + 7) * 4\n((5 + 6 + 5 + 3 + 6) * 6) + (8 * (8 * 2 + 3 + 9 + 3) * 7 * 7 * 2) * 7 * 3\n4 * (9 + 8 * 8 + 6 + 3) + 8 + ((7 * 3 + 2 * 2 + 7) + 2 * 2) * 4\n(7 + 7 * 5 + 5 + 4) + 8 + 6 * (6 * (9 + 8 + 8) + 8) + 4 + 2\n(6 + 9 * 3 * (9 * 8 + 3) * (9 * 9 * 2)) * 8\n4 + ((4 + 3 + 4 * 9 + 8) * 5 * 4 * 5 + 7 * 2) + (3 + 3 + (6 * 4) * 5 * 4 + 4) * 4 * ((6 * 6) + 5 + 4)\""}],";"}]],
"Input",CellLabel -> "In[435]:= ",ExpressionUUID -> "ccfd9db1-7b63-4360-8798-4bd4e9ed6754"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Plus","@@",RowBox[{"Map","[",RowBox[{RowBox[{RowBox[{"input2characters","[","#","]"}],"&"}],",",RowBox[
{"StringSplit","[",RowBox[{"input",",","\"\\n\""}],"]"}]}],"]"}]}]],"Input",CellLabel -> "In[466]:= ",
ExpressionUUID -> "4c820e9e-5a26-4486-a960-a59dabd945f9"],Cell[
BoxData["323912478287549",
StandardForm],"Output",CellLabel -> "Out[466]= ",ExpressionUUID -> "75cb5631-282b-4eef-8698-8d927150b89a"]},
Open],ExpressionUUID -> "f21333ca-7110-48d9-8a67-3058ac18ceb9"],Cell[
BoxData[RowBox[
{RowBox[{RowBox[{"input2characters","[","input_String","]"}],":=","\"eval[{\""}]," ","\n",RowBox[
{"<>",RowBox[{"StringReplace","[",RowBox[{"input",",",RowBox[{"{",RowBox[{RowBox[
{"\"(\""," ","\[Rule]"," ","\"eval[{\""}],",",RowBox[{"\")\"","\[Rule]","\"}]\""}],",",RowBox[
{"\"+\"","\[Rule]","\", plus, \""}],",",RowBox[{"\"*\"","\[Rule]","\", times, \""}]}],"}"}]}],"]"}]}],"\n",RowBox[
{RowBox[{"<>","\"}]\""}],"//","ToExpression"}]}]],"Input",ExpressionUUID -> "450ee4e1-9f22-49a6-90b7-24cd1c460e06"],Cell[
BoxData[
RowBox[{"Plus","@@",RowBox[{"Map","[",RowBox[{RowBox[{RowBox[{"input2characters","[","#","]"}],"&"}],",",RowBox[
{"StringSplit","[",RowBox[{"input",",","\"\\n\""}],"]"}]}],"]"}]}]],"Input",ExpressionUUID -> "907f8c4c-2a93-4e90-88b9-f06c52a4d7e4"]},
StyleDefinitions -> "Default.nb",FrontEndVersion -> "12.2 for Wolfram Cloud 1.57.0.2 (December 8, 2020)"]